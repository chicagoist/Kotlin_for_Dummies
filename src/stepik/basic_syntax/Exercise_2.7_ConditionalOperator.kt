package stepik.basic_syntax

/* 2.7 –£—Å–ª–æ–≤–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä

–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É - –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–≥–æ –Ω–∞–ª–æ–≥–∞ –¥–ª—è –ª–µ–≥–∫–æ–≤–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è:

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –º–æ—â–Ω–æ—Å—Ç—å –¥–≤–∏–≥–∞—Ç–µ–ª—è (–ª.—Å.)
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã—á–∏—Å–ª—è–µ—Ç –Ω–∞–ª–æ–≥, —É–º–Ω–æ–∂–∞—è –∫–æ–ª-–≤–æ –ª.—Å. –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Å—Ç–∞–≤–∫—É
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å:

//–í–∏–¥ –¢–°: –ª–µ–≥–∫–æ–≤–æ–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å
//–ú–æ—â–Ω–æ—Å—Ç—å –¥–≤–∏–≥–∞—Ç–µ–ª—è: _ –ª.—Å.
//–ù–∞–ª–æ–≥–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞: _ —Ä—É–±./–ª.—Å.
//–°—É–º–º–∞ –Ω–∞–ª–æ–≥–∞: _ —Ä—É–±.

–î–µ–π—Å—Ç–≤—É—é—â–∏–µ —Å—Ç–∞–≤–∫–∏:

<=100–ª.—Å. - 10 —Ä—É–±. / –ª.—Å
>100–ª.—Å. - 34 —Ä—É–±. / –ª.—Å
>150–ª.—Å. - 49 —Ä—É–±. / –ª.—Å
>200–ª.—Å. - 75 —Ä—É–±. / –ª.—Å
>250–ª.—Å. - 150 —Ä—É–±. / –ª.—Å
Sample Input:

280
Sample Output:

–í–∏–¥ –¢–°: –ª–µ–≥–∫–æ–≤–æ–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å
–ú–æ—â–Ω–æ—Å—Ç—å –¥–≤–∏–≥–∞—Ç–µ–ª—è: 280 –ª.—Å.
–ù–∞–ª–æ–≥–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞: 150 —Ä—É–±./–ª.—Å.
–°—É–º–º–∞ –Ω–∞–ª–æ–≥–∞: 42000 —Ä—É–±.


*/
fun main() {
    val enginePower = readln().toIntOrNull() ?: run {
        println("–û—à–∏–±–∫–∞: —Ç—Ä–µ–±—É–µ—Ç—Å—è —á–∏—Å–ª–æ!")
        return
    }

    val taxRate = if (enginePower <= 100) {
        10
    } else if (enginePower <= 150) { // –£–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–æ—Å—å enginePower > 100
        34
    } else if (enginePower <= 200) { // –£–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–æ—Å—å enginePower > 150
        49
    } else if (enginePower <= 250) { // –£–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–æ—Å—å enginePower > 200
        75
    } else { // –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–ª—É—á–∞–∏ (enginePower > 250)
        150
    }

    val amountOfTax = enginePower * taxRate

    println("–í–∏–¥ –¢–°: –ª–µ–≥–∫–æ–≤–æ–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å")
    println("–ú–æ—â–Ω–æ—Å—Ç—å –¥–≤–∏–≥–∞—Ç–µ–ª—è: $enginePower –ª.—Å.")
    println("–ù–∞–ª–æ–≥–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞: $taxRate —Ä—É–±./–ª.—Å.")
    println("–°—É–º–º–∞ –Ω–∞–ª–æ–≥–∞: ${amountOfTax} —Ä—É–±.")
}

/*
üìë Cheat Sheet –ø–æ —É—Ä–æ–∫—É 2.7

–®–ü–ê–†–ì–ê–õ–ö–ê: –£–°–õ–û–í–ù–´–ï –û–ü–ï–†–ê–¢–û–†–´ –ò NULL-SAFETY
–ë–∞–∑–æ–≤—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å:

// –ü—Ä–æ—Å—Ç–æ–µ –≤–µ—Ç–≤–ª–µ–Ω–∏–µ
if (condition) { /* code */ } else { /* code */ }

// –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
if (condition1) { /* code */ }
else if (condition2) { /* code */ }
else { /* code */ }
Secure-first —Å null-safety:

// –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤–≤–æ–¥ —á–∏—Å–µ–ª
val input = readln()
val number = input.toIntOrNull() ?: run {
    println("–û—à–∏–±–∫–∞: —Ç—Ä–µ–±—É–µ—Ç—Å—è —á–∏—Å–ª–æ!")
    return // –∏–ª–∏ continue/break –≤ —Ü–∏–∫–ª–µ
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤
if (number !in 1..100) { // –ï—Å–ª–∏ —á–∏—Å–ª–æ –ù–ï –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 1-100
    println("–û—à–∏–±–∫–∞: —á–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 100")
    return
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
if (value != "option1" && value != "option2") {
    println("–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ")
    return
}
–ò–¥–∏–æ–º–∞—Ç–∏—á–Ω—ã–π Kotlin:
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ val –≤–º–µ—Å—Ç–æ var –≥–¥–µ –≤–æ–∑–º–æ–∂–Ω–æ

–†–∞–Ω–Ω–∏–π –≤–æ–∑–≤—Ä–∞—Ç (return) –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö –≤–∞–ª–∏–¥–∞—Ü–∏–∏

–Ø—Å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è




*/